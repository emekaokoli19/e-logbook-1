{"ast":null,"code":"import { inject } from '@angular/core';\nimport { FormService } from \"../../services/form.service\";\nimport { AuthService } from '../auth.service';\nimport * as i0 from \"@angular/core\";\nclass RegisterComponent {\n  constructor() {\n    // router links\n    this.routerLinkActive = 'active';\n    this.authService = inject(AuthService);\n    this.formService = inject(FormService);\n    this.formGroup = this.formService.registerForm;\n    this.formValues = {\n      fullName: this.formGroup.value.fullName ?? '',\n      email: this.formGroup.value.email ?? '',\n      password: this.formGroup.value.password ?? ''\n    };\n  }\n  /* actions come into class ==== */\n  registerUser() {\n    this.authService.registerUser(this.formValues);\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)();\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 21,\n  vars: 1,\n  consts: [[1, \"auth\"], [1, \"auth__header\"], [1, \"auth__form\"], [3, \"formGroup\", \"register\"], [\"for\", \"fullname\"], [\"id\", \"fullname\", \"type\", \"text\", \"formControlName\", \"fullName\", \"placeholder\", \"Enter your fullname\", 1, \"\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"Enter your email\", 1, \"\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"text\", \"formControlName\", \"password\", \"placeholder\", \"Enter your password\", 1, \"\"], [1, \"radio-label\"], [1, \"radio-label__text\"], [1, \"\"], [\"type\", \"\", 1, \"\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"section\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"Sign Up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"p\");\n      i0.ɵɵtext(5, \"Enter your credentials to create your account\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"section\", 2)(7, \"form\", 3);\n      i0.ɵɵlistener(\"register\", function RegisterComponent_Template_form_register_7_listener() {\n        return ctx.registerUser;\n      });\n      i0.ɵɵelementStart(8, \"label\", 4);\n      i0.ɵɵelement(9, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"label\", 6);\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"label\", 8);\n      i0.ɵɵelement(13, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 10)(15, \"p\", 11);\n      i0.ɵɵtext(16, \"I agree with elb's \");\n      i0.ɵɵelementStart(17, \"a\", 12);\n      i0.ɵɵtext(18, \"Terms & Conditions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"button\", 13);\n      i0.ɵɵtext(20, \"Sign Up\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { RegisterComponent };","map":{"version":3,"names":["inject","FormService","AuthService","RegisterComponent","constructor","routerLinkActive","authService","formService","formGroup","registerForm","formValues","fullName","value","email","password","registerUser","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegisterComponent_Template_form_register_7_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Hp Pc\\Desktop\\GITHUB-PROJECTS\\react-projects\\e-logbook\\src\\app\\auth\\register\\register.component.ts","C:\\Users\\Hp Pc\\Desktop\\GITHUB-PROJECTS\\react-projects\\e-logbook\\src\\app\\auth\\register\\register.component.html"],"sourcesContent":["import { Component, inject } from '@angular/core';\nimport {FormService} from \"../../services/form.service\";\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-register',\n  // imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n  // router links\n  routerLinkActive: string = 'active'\n\n  authService = inject(AuthService)\n  formService = inject(FormService)\n  \n  formGroup: any = this.formService.registerForm\n\n  formValues = {\n    fullName: this.formGroup.value.fullName ?? '',\n    email: this.formGroup.value.email ?? '',\n    password: this.formGroup.value.password ?? '',\n  }\n  \n  /* actions come into class ==== */\n  registerUser() {\n    this.authService.registerUser(this.formValues)\n  }\n}","<div class=\"auth\">\r\n\r\n    <section class=\"auth__header\">\r\n        <h2>Sign Up</h2>\r\n        <p>Enter your credentials to create your account</p>\r\n    </section>\r\n\r\n    <section class=\"auth__form\">\r\n        <form [formGroup]='formGroup' (register)=\"registerUser\">\r\n            <label for=\"fullname\">\r\n                <input id=\"fullname\" class=\"\" type=\"text\" formControlName=\"fullName\"\r\n                    placeholder=\"Enter your fullname\" />\r\n            </label>\r\n\r\n            <label for=\"email\">\r\n                <input id=\"email\" class=\"\" type=\"text\" formControlName=\"email\" placeholder=\"Enter your email\" />\r\n            </label>\r\n\r\n            <label for=\"password\">\r\n                <input id=\"password\" class=\"\" type=\"text\" formControlName=\"password\"\r\n                    placeholder=\"Enter your password\" />\r\n            </label>\r\n\r\n            <div class=\"radio-label\">\r\n                <p class=\"radio-label__text\">I agree with elb's <a class=\"\">Terms & Conditions</a></p>\r\n            </div>\r\n\r\n            <button type=\"\" class=\"\">Sign Up</button>\r\n        </form>\r\n\r\n        <!-- <div class=\"\">Got an account?<a routerLink=\"/login\" routerLinkActive #rla=\"routerLinkActive\" class=\"\">Log in -->\r\n        <!-- {{rla.isActive ? '(opened)' :''}}</a></div> -->\r\n        <!-- [routerLinkActiveOptions]=\"{exact: true} -->\r\n    </section>\r\n</div>"],"mappings":"AAAA,SAAoBA,MAAM,QAAQ,eAAe;AACjD,SAAQC,WAAW,QAAO,6BAA6B;AACvD,SAASC,WAAW,QAAQ,iBAAiB;;AAE7C,MAMaC,iBAAiB;EAN9BC,YAAA;IAOE;IACA,KAAAC,gBAAgB,GAAW,QAAQ;IAEnC,KAAAC,WAAW,GAAGN,MAAM,CAACE,WAAW,CAAC;IACjC,KAAAK,WAAW,GAAGP,MAAM,CAACC,WAAW,CAAC;IAEjC,KAAAO,SAAS,GAAQ,IAAI,CAACD,WAAW,CAACE,YAAY;IAE9C,KAAAC,UAAU,GAAG;MACXC,QAAQ,EAAE,IAAI,CAACH,SAAS,CAACI,KAAK,CAACD,QAAQ,IAAI,EAAE;MAC7CE,KAAK,EAAE,IAAI,CAACL,SAAS,CAACI,KAAK,CAACC,KAAK,IAAI,EAAE;MACvCC,QAAQ,EAAE,IAAI,CAACN,SAAS,CAACI,KAAK,CAACE,QAAQ,IAAI;KAC5C;;EAED;EACAC,YAAYA,CAAA;IACV,IAAI,CAACT,WAAW,CAACS,YAAY,CAAC,IAAI,CAACL,UAAU,CAAC;EAChD;;AAlBWP,iBAAiB,C;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB,C;QAAjBA,iBAAiB;EAAAa,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCV9BE,EAAA,CAAAC,cAAA,aAAkB;MAGND,EAAA,CAAAE,MAAA,cAAO;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAChBH,EAAA,CAAAC,cAAA,QAAG;MAAAD,EAAA,CAAAE,MAAA,oDAA6C;MAAAF,EAAA,CAAAG,YAAA,EAAI;MAGxDH,EAAA,CAAAC,cAAA,iBAA4B;MACMD,EAAA,CAAAI,UAAA,sBAAAC,oDAAA;QAAA,OAAAN,GAAA,CAAAR,YAAA;MAAA,EAAyB;MACnDS,EAAA,CAAAC,cAAA,eAAsB;MAClBD,EAAA,CAAAM,SAAA,eACwC;MAC5CN,EAAA,CAAAG,YAAA,EAAQ;MAERH,EAAA,CAAAC,cAAA,gBAAmB;MACfD,EAAA,CAAAM,SAAA,gBAAgG;MACpGN,EAAA,CAAAG,YAAA,EAAQ;MAERH,EAAA,CAAAC,cAAA,gBAAsB;MAClBD,EAAA,CAAAM,SAAA,gBACwC;MAC5CN,EAAA,CAAAG,YAAA,EAAQ;MAERH,EAAA,CAAAC,cAAA,eAAyB;MACQD,EAAA,CAAAE,MAAA,2BAAmB;MAAAF,EAAA,CAAAC,cAAA,aAAY;MAAAD,EAAA,CAAAE,MAAA,0BAAkB;MAAAF,EAAA,CAAAG,YAAA,EAAI;MAGtFH,EAAA,CAAAC,cAAA,kBAAyB;MAAAD,EAAA,CAAAE,MAAA,eAAO;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;MAnBvCH,EAAA,CAAAO,SAAA,GAAuB;MAAvBP,EAAA,CAAAQ,UAAA,cAAAT,GAAA,CAAAf,SAAA,CAAuB;;;;;SDExBL,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}