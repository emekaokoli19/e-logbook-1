{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass AuthService {\n  constructor() {}\n  registerUser({\n    fullName,\n    email,\n    password\n  }) {\n    /* auth action ======= */\n    console.log(`New User Signed In with fullname: ${fullName}, and email address: ${email}, password cannot be disclosed ${password.slice(4)}`);\n  }\n  loginUser({}) {\n    /* auth action ======= */\n  }\n  sendPasswordResetLink({}) {\n    /* auth action ======= */\n  }\n  ngOnit() {\n    /* Do this when the page loads ====== */\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)();\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["AuthService","constructor","registerUser","fullName","email","password","console","log","slice","loginUser","sendPasswordResetLink","ngOnit","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Hp Pc\\Desktop\\GITHUB-PROJECTS\\react-projects\\e-logbook\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["/* Here contains the list of all auth actions\r\n  for our forms across all pages\r\n*/\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { login, register, forgotPassword } from '../interfaces/auth-interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor() { }\r\n\r\n  registerUser({fullName, email, password}:register) {\r\n    /* auth action ======= */\r\n    console.log(`New User Signed In with fullname: ${fullName}, and email address: ${email}, password cannot be disclosed ${password.slice(4)}`)\r\n  }\r\n  \r\n  loginUser({}: login) {\r\n    /* auth action ======= */\r\n  }\r\n\r\n  sendPasswordResetLink({}: forgotPassword) {\r\n    /* auth action ======= */\r\n  }\r\n\r\n  ngOnit() {\r\n    /* Do this when the page loads ====== */\r\n  }\r\n}\r\n"],"mappings":";AAOA,MAGaA,WAAW;EAEtBC,YAAA,GAAgB;EAEhBC,YAAYA,CAAC;IAACC,QAAQ;IAAEC,KAAK;IAAEC;EAAQ,CAAU;IAC/C;IACAC,OAAO,CAACC,GAAG,CAAC,qCAAqCJ,QAAQ,wBAAwBC,KAAK,kCAAkCC,QAAQ,CAACG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;EAC9I;EAEAC,SAASA,CAAC,EAAS;IACjB;EAAA;EAGFC,qBAAqBA,CAAC,EAAkB;IACtC;EAAA;EAGFC,MAAMA,CAAA;IACJ;EAAA;;AAlBSX,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;SAAXA,WAAW;EAAAY,OAAA,EAAXZ,WAAW,CAAAa,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPd,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}