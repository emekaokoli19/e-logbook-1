{"ast":null,"code":"import { inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormService } from \"../../services/form.service\";\nimport { AuthService } from '../auth.service';\nimport * as i0 from \"@angular/core\";\nclass RegisterComponent {\n  constructor() {\n    this.authService = inject(AuthService);\n    this.formService = inject(FormService);\n    this.formGroup = {};\n    this.formGroup = this.formService.registerForm; // gets the register values\n  }\n  // actions come into class\n  registerUser() {\n    this.authService.registerUser(\n      // pass in the values\n    );\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)();\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 25,\n  vars: 1,\n  consts: [[1, \"auth\"], [1, \"auth__header\"], [1, \"auth__form\"], [3, \"formGroup\"], [\"for\", \"fullname\"], [\"id\", \"fullname\", \"type\", \"text\", \"formControlName\", \"\", 1, \"\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"text\", \"formControlName\", \"\", 1, \"\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"text\", \"formControlName\", \"\", 1, \"\"], [1, \"radio-label\"], [1, \"radio-label__text\"], [1, \"\"], [\"type\", \"\", 1, \"\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"section\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"Sign Up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"p\");\n      i0.ɵɵtext(5, \"Enter your credentials to create your account\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"section\", 2)(7, \"form\", 3)(8, \"label\", 4);\n      i0.ɵɵelement(9, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"label\", 6);\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"label\", 8);\n      i0.ɵɵelement(13, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 10)(15, \"p\", 11);\n      i0.ɵɵtext(16, \"I agree with elb's \");\n      i0.ɵɵelementStart(17, \"a\", 12);\n      i0.ɵɵtext(18, \"Terms & Conditions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"button\", 13);\n      i0.ɵɵtext(20, \"Sign Up\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 12);\n      i0.ɵɵtext(22, \"Got an account?\");\n      i0.ɵɵelementStart(23, \"a\", 12);\n      i0.ɵɵtext(24, \"Log in\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n    }\n  },\n  dependencies: [CommonModule],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { RegisterComponent };","map":{"version":3,"names":["inject","CommonModule","FormService","AuthService","RegisterComponent","constructor","authService","formService","formGroup","registerForm","registerUser","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","styles"],"sources":["C:\\Users\\Hp Pc\\Desktop\\GITHUB-PROJECTS\\REACT-PROJECTS\\E-LOGBOOK\\src\\app\\authenticate\\register\\register.component.ts","C:\\Users\\Hp Pc\\Desktop\\GITHUB-PROJECTS\\REACT-PROJECTS\\E-LOGBOOK\\src\\app\\authenticate\\register\\register.component.html"],"sourcesContent":["import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormService} from \"../../services/form.service\";\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n  authService = inject(AuthService)\n  formService = inject(FormService)\n  \n  formGroup: object = {}\n\n  constructor() {\n    this.formGroup = this.formService.registerForm; // gets the register values\n  }\n\n  // actions come into class\n  \n  registerUser() {\n    this.authService.registerUser(\n      // pass in the values\n    )\n  }\n}\n","<div class=\"auth\">\r\n\r\n    <section class=\"auth__header\">\r\n        <h2>Sign Up</h2>\r\n        <p>Enter your credentials to create your account</p>\r\n    </section>\r\n\r\n    <section class=\"auth__form\">\r\n        <form [formGroup]='formGroup'>\r\n            <label for=\"fullname\">\r\n                <input id=\"fullname\" class=\"\" type=\"text\" formControlName=\"\" />\r\n            </label>\r\n\r\n            <label for=\"email\">\r\n                <input id=\"email\" class=\"\" type=\"text\" formControlName=\"\" />\r\n            </label>\r\n\r\n            <label for=\"password\">\r\n                <input id=\"password\" class=\"\" type=\"text\" formControlName=\"\" />\r\n            </label>\r\n\r\n            <div class=\"radio-label\">\r\n                <p class=\"radio-label__text\">I agree with elb's <a class=\"\">Terms & Conditions</a></p>\r\n            </div>\r\n\r\n            <button type=\"\" class=\"\">Sign Up</button>\r\n        </form>\r\n\r\n        <div class=\"\">Got an account?<a class=\"\">Log in</a></div>\r\n    </section>\r\n</div>"],"mappings":"AAAA,SAAoBA,MAAM,QAAQ,eAAe;AACjD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAAQC,WAAW,QAAO,6BAA6B;AACvD,SAASC,WAAW,QAAQ,iBAAiB;;AAE7C,MAOaC,iBAAiB;EAM5BC,YAAA;IALA,KAAAC,WAAW,GAAGN,MAAM,CAACG,WAAW,CAAC;IACjC,KAAAI,WAAW,GAAGP,MAAM,CAACE,WAAW,CAAC;IAEjC,KAAAM,SAAS,GAAW,EAAE;IAGpB,IAAI,CAACA,SAAS,GAAG,IAAI,CAACD,WAAW,CAACE,YAAY,CAAC,CAAC;EAClD;EAEA;EAEAC,YAAYA,CAAA;IACV,IAAI,CAACJ,WAAW,CAACI,YAAY;MAC3B;IAAA,CACD;EACH;;AAhBWN,iBAAiB,C;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB,C;QAAjBA,iBAAiB;EAAAO,SAAA;EAAAC,UAAA;EAAAC,QAAA,GAAAC,EAAA,CAAAC,mBAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCZ9BP,EAAA,CAAAS,cAAA,aAAkB;MAGNT,EAAA,CAAAU,MAAA,cAAO;MAAAV,EAAA,CAAAW,YAAA,EAAK;MAChBX,EAAA,CAAAS,cAAA,QAAG;MAAAT,EAAA,CAAAU,MAAA,oDAA6C;MAAAV,EAAA,CAAAW,YAAA,EAAI;MAGxDX,EAAA,CAAAS,cAAA,iBAA4B;MAGhBT,EAAA,CAAAY,SAAA,eAA+D;MACnEZ,EAAA,CAAAW,YAAA,EAAQ;MAERX,EAAA,CAAAS,cAAA,gBAAmB;MACfT,EAAA,CAAAY,SAAA,gBAA4D;MAChEZ,EAAA,CAAAW,YAAA,EAAQ;MAERX,EAAA,CAAAS,cAAA,gBAAsB;MAClBT,EAAA,CAAAY,SAAA,gBAA+D;MACnEZ,EAAA,CAAAW,YAAA,EAAQ;MAERX,EAAA,CAAAS,cAAA,eAAyB;MACQT,EAAA,CAAAU,MAAA,2BAAmB;MAAAV,EAAA,CAAAS,cAAA,aAAY;MAAAT,EAAA,CAAAU,MAAA,0BAAkB;MAAAV,EAAA,CAAAW,YAAA,EAAI;MAGtFX,EAAA,CAAAS,cAAA,kBAAyB;MAAAT,EAAA,CAAAU,MAAA,eAAO;MAAAV,EAAA,CAAAW,YAAA,EAAS;MAG7CX,EAAA,CAAAS,cAAA,eAAc;MAAAT,EAAA,CAAAU,MAAA,uBAAe;MAAAV,EAAA,CAAAS,cAAA,aAAY;MAAAT,EAAA,CAAAU,MAAA,cAAM;MAAAV,EAAA,CAAAW,YAAA,EAAI;;;MApB7CX,EAAA,CAAAa,SAAA,GAAuB;MAAvBb,EAAA,CAAAc,UAAA,cAAAN,GAAA,CAAAd,SAAA,CAAuB;;;iBDAzBP,YAAY;EAAA4B,MAAA;AAAA;SAIXzB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}